
<デリゲートとは>
　class A:B->クラスAはBのデリゲートを批准する。(Bが誰かに"処理してほしい"ことをAが"自分がやります”と宣言)
　例えば、UIImagePickerControllerでは画像をカメラロールから選んだ直後の処理（表示するなど）はプログラマーの意志に委ねたい。(imagePickerControllerが相当。メソッド名変更不可)

<オプショナル型>
　オプショナル型宣言の?と!...例えばlet str:String? と宣言した場合、
　このstrには文字列とnilを入力できる。しかし、このままstrを呼び出しても、
　オプショナル型であるため、文字列として操作できない。そこで、呼び出す際は、
　!strとしてアンラップする。（文字列型に戻す）
　宣言時にlet str:String!としていた場合は、呼び出す時に!をつける必要がない

<>
